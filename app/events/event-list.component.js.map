{"version":3,"sources":["events/event-list.component.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;YAeA;gBAaI,4BAAoB,aAA2B;oBAA3B,kBAAa,GAAb,aAAa,CAAc;oBAX/C,cAAS,GAAW,IAAI,CAAC;oBACzB,cAAS,GAAW,oBAAoB,CAAC;oBACzC,eAAU,GAAW,GAAG,CAAC;oBACzB,gBAAW,GAAW,CAAC,CAAC;oBACxB,mBAAc,GAAU,OAAO,CAAC;gBAQhC,CAAC;gBAKD,yCAAY,GAAZ;oBACI,IAAI,CAAC,SAAS,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC;gBACrC,CAAC;gBAED,qCAAQ,GAAR;oBAAA,iBAOC;oBANG,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;oBACzB,IAAI,CAAC,aAAa,CAAC,SAAS,EAAE;yBACzB,SAAS,CAAC,UAAA,MAAM,IAAI,OAAA,KAAI,CAAC,MAAM,GAAG,MAAM,EAApB,CAAoB,EACzC,UAAA,KAAK,IAAG,OAAA,KAAI,CAAC,YAAY,GAAQ,KAAK,EAA9B,CAA8B,CAAC,CAAC;gBAGhD,CAAC;gBAED,4CAAe,GAAf,UAAgB,OAAe;oBAC3B,IAAI,CAAC,SAAS,GAAG,aAAa,GAAG,OAAO,CAAE;gBAC9C,CAAC;gBA3CL;oBAAC,gBAAS,CAAC;wBACP,WAAW,EAAE,sCAAsC;wBACnD,SAAS,EAAE,CAAC,qCAAqC,CAAC;wBAClD,KAAK,EAAE,CAAC,mCAAe,CAAC;wBACxB,UAAU,EAAC,CAAC,gCAAc,CAAC;qBAC9B,CAAC;;sCAAA;gBA6CF,yBAAC;YAAD,CAzCA,AAyCC,IAAA;YAzCD,mDAyCC,CAAA","file":"event-list.component.js","sourcesContent":["import { Component, OnInit } from 'angular2/core';\nimport { IEvent } from './event';\nimport { EventFilterPipe } from './event-filter.pipe';\nimport { ThumbComponent } from '../shared/thumb.component';\nimport { EventService } from './event.service';\n\n@Component({\n    templateUrl :'app/events/event-list.component.html',\n    styleUrls: ['app/events/event-list.component.css'],\n    pipes: [EventFilterPipe],\n    directives:[ThumbComponent]\n})\n\n\n\nexport class EventListComponent implements OnInit{\n    \n    eventsImg: boolean= true;\n    pageTitle: string = \" ** Event List ** \";\n    imageWidth: number = 100;\n    imageMargin: number = 2;\n    searchCriteria: string= 'Event';\n    \n    \n    events: IEvent[] ;\n    errorMessage: string;\n    \n    \n    constructor(private _eventService: EventService){\n    }\n\n\n\n\n    toogleImages(): void {\n        this.eventsImg = !this.eventsImg;\n    }\n    \n    ngOnInit(): void{\n        console.log('In OnInit');\n        this._eventService.getEvents()\n            .subscribe(events => this.events = events,\n            error=> this.errorMessage = <any>error);\n            \n\n    }\n    \n    onRatingClicked(message: string): void{\n        this.pageTitle = 'Event List ' + message ;\n    }\n    \n    \n    \n\n\n    \n}"]}